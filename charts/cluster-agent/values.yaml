# IMPORTANT: Specify your Epsagon Token here.
# epsagonToken -- Set the Epsagon token of your account
epsagonToken: ""

# -- Set a unique cluster name to allow multiple clusters to integrate with Epsagon,
# while easily identifying where the resources are coming from
## The name must be unique:
## * Overall length should not be higher than 80 characters.
clusterName: ""
debug: "false"

monitoring:
  # enable epsagon auto monitoring
  enabled: false

  redis:
    # monitoring.redis.enabled -- enable redis monitoring
    enabled: false

  rabbitmq:
    # monitoring.rabbitmq.enabled -- enable rabbitmq monitoring
    enabled: false

  mongodb:
    # monitoring.mongodb.enabled -- enable mongodb monitoring
    enabled: false

clusterAgent:
  # -- The url to send the data to
  epsagonUrl: "https://collector.epsagon.com/resources/v1"

  ## Provide Cluster Agent Deployment pod(s) RBAC configuration
  rbac:
    # -- If true, create & use RBAC resources
    create: true

  #  replicaCount: 1

  image:
    repository: epsagon/cluster-agent
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # The current commented requests & limits default values are the ones recommended by us.
    # limits:
    #   cpu: 1000m
    #   memory: 1Gi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  nodeSelector: {}

  tolerations: []

  affinity: {}

# Prometheus Config
epsagon-agent:
  alertmanager:
    enabled: false
  nodeExporter:
    enabled: false
  pushgateway:
    enabled: false

  serviceAccounts:
    alertmanager:
      create: false
    nodeExporter:
      create: false
    pushgateway:
      create: false

  server:
    persistentVolume:
      size: 1Gi
    remoteWrite: []

epsagon-rabbitmq-exporter:
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "9419"
    prometheus.io/scrape: "true"

epsagon-mongodb-exporter:
  podAnnotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "9216"
    prometheus.io/scrape: "true"

epsagon-redis-exporter:
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "9121"
    prometheus.io/scrape: "true"
